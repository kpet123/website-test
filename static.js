

var MI_entries = [
{title: "Virtual Asynchronous Chamber Music",
 background_color: "e9dcfa",
 text: 
	`Covid 19 pandemic meant that people can no longer play together in person.
                without the danger of becoming sick. This project allows separately recored
			    parts recorded without click track to be assembled into a whole. uses technology based
				on the Informatics Philharmonic software....Kaitlin used timing generated by Informatics 
                Philharmonic software to remotely create ensembles. She implemented aspects of this
                projects like mixing and video synchrony....... `},

{title: "Adapting Mixed Instrument and Tape works for 'Flexible' Performance",
 background_color:"deffdf",
 text:
	"JacobTV's pieces were adapted to ..."
}
]

var make_entry= function(direction, background_color, title, text, img_url){

	   if (direction=="left"){

			   return ` 
				<div class="row" >
				<div class='col-sm-10'>
				<div class='row' id='entry-holder' style='background-color:#${background_color}'>
					<div class='col-sm-5' id='entry' >
			   
						<h3>${title} </h3>

						<p>${text}</p>
					</div>
			   
					<div class='col-sm-5'id='media' >

						<div class="embed-responsive embed-responsive-16by9">
						  <iframe class="embed-responsive-item" src="${img_url}">i
						  </iframe>
						</div>

					</div>
				</div>
				</div>
				</div>`;
		}

		else{

		return `
       <div class="row" >
        <div class='col-sm-2'></div>
        <div class='col-sm-10'>
        <div class='row' id='entry-holder' style='background-color:#${background_color}'>
            <div class='col-sm-5'id='media' >

                <div class="embed-responsive embed-responsive-16by9">
                  <iframe class="embed-responsive-item" src="${img_url}">i
                  </iframe>
                </div>

            </div>
            <div class='col-sm-5' id='entry' >

                <h3>${title}</h3>

                <p>${text}</p>
            </div>

        </div>
        </div>
        </div>`;

		}
	} 

var load  = function(entry_dict){
console.log(entry_dict.length)
for(let i=0;i< entry_dict.length; i++){
    console.log("i is", i);
	entry_data = entry_dict[i];
	var entry_left = make_entry("left", entry_data.background_color, entry_data.title, entry_data.text)
    $("#entries").append(entry_left);

	i=i+1;
	entry_data = entry_dict[i];
	var entry_right = make_entry("right", entry_data.background_color, entry_data.title, entry_data.text)
    $("#entries").append(entry_right);

   
}
};


$( document ).ready(function() {
    console.log( "ready!" );
    load(MI_entries);
});
